#!/bin/bash
# note: depends on jq

wid=$1
class=$2
instance=$3

# window classes to desktop names
declare -A matches=(
    ["Termite"]="Term"
    ["kitty"]="Term"
    ["Thunderbird"]="Mail"
    ["firefoxdeveloperedition"]="Web"
    ["firefox"]="Web"
    ["Code"]="Code"
    ["VirtualBox"]="VirtualBox"
    ["spotify"]="Media"
    ["Steam"]="Steam"
    ["KeePassXC"]="Keepass"
    ["Lutris"]="Games"
    ["Wine"]="Wine"
    ["TeamSpeak 3"]="Teamspeak"
)

#echo -e "$class" >> /tmp/wid
#echo -e "$wid" >> /tmp/wid
#echo -e "$instance" >> /tmp/wid

# if we have a match, create a desktop on current monitor if not existing
if [ ${matches[$class]+exists} ]; then
    #echo "matches" >> /tmp/wid
    desktop=${matches[$class]}
    if ! bspc query -T -m | jq -er ".desktops[] | select(.name==\"$desktop\").name" >/dev/null; then
      if [ $(bspc query -N -d focused.occupied | wc -l) -eq "0" ]; then
        echo "rename" > /tmp/output
        # We could rename the desktop here right?
        bspc desktop --rename "$desktop"
      else
        bspc monitor -a $desktop
      fi
    fi
    # For some reason, if multiple desktops with the same name exist on different monitors,
    # even when using focused:name, the desktop isn't chosen correctly. Only works when using the index of the chosen desktop...
    # hence, calculating the index of the desired monitor
    desktopIndex=$(bspc query -T -m | jq ".desktops | map(.name) | index(\"$desktop\")+1");
    echo -e "desktop=focused:^$desktopIndex follow=on"
fi
